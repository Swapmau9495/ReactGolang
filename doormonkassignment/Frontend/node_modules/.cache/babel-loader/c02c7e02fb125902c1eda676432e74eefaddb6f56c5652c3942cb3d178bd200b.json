{"ast":null,"code":"import axios from \"axios\";\n\n// POST Api to Post data to server when the user clicks on Submit\nexport async function postData(student) {\n  try {\n    // Transforming educational background data into an array of objects\n    const educationalBackground = student.educationalBackground.map(edu => ({\n      institutionName: edu.institutionName[0],\n      // Assuming institutionName is a single value\n      passOutYear: parseInt(edu.passOutYear[0]),\n      // Assuming passOutYear is a single value\n      cgpiScore: parseFloat(edu.cgpiScore[0]) // Assuming cgpiScore is a single value\n    }));\n    console.log(\"educationalBackground\", educationalBackground);\n    // Forming the data object to send to the server\n    const data = {\n      ...student,\n      educationalBackground: educationalBackground\n    };\n    const response = await axios.post(\"http://localhost:8080/api/student\", data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error posting data:\", error);\n    throw error;\n  }\n}\n\n// import axios from \"axios\";\n// // POST Api to Post data to server when user click on Submit\n// export async function postData(student) {\n//   try {\n//     const response = await axios.post(\n//       \"http://localhost:8080/api/students\",\n//       student\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error posting data:\", error);\n//     throw error;\n//   }\n// }","map":{"version":3,"names":["axios","postData","student","educationalBackground","map","edu","institutionName","passOutYear","parseInt","cgpiScore","parseFloat","console","log","data","response","post","error"],"sources":["/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/PostAPI/Api.js"],"sourcesContent":["import axios from \"axios\";\n\n// POST Api to Post data to server when the user clicks on Submit\nexport async function postData(student) {\n  try {\n    // Transforming educational background data into an array of objects\n    const educationalBackground = student.educationalBackground.map((edu) => ({\n      institutionName: edu.institutionName[0], // Assuming institutionName is a single value\n      passOutYear: parseInt(edu.passOutYear[0]), // Assuming passOutYear is a single value\n      cgpiScore: parseFloat(edu.cgpiScore[0]), // Assuming cgpiScore is a single value\n    }));\n    console.log(\"educationalBackground\", educationalBackground);\n    // Forming the data object to send to the server\n    const data = {\n      ...student,\n      educationalBackground: educationalBackground,\n    };\n\n    const response = await axios.post(\n      \"http://localhost:8080/api/student\",\n      data\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error posting data:\", error);\n    throw error;\n  }\n}\n\n// import axios from \"axios\";\n// // POST Api to Post data to server when user click on Submit\n// export async function postData(student) {\n//   try {\n//     const response = await axios.post(\n//       \"http://localhost:8080/api/students\",\n//       student\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error posting data:\", error);\n//     throw error;\n//   }\n// }\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,eAAeC,QAAQA,CAACC,OAAO,EAAE;EACtC,IAAI;IACF;IACA,MAAMC,qBAAqB,GAAGD,OAAO,CAACC,qBAAqB,CAACC,GAAG,CAAEC,GAAG,KAAM;MACxEC,eAAe,EAAED,GAAG,CAACC,eAAe,CAAC,CAAC,CAAC;MAAE;MACzCC,WAAW,EAAEC,QAAQ,CAACH,GAAG,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;MAAE;MAC3CE,SAAS,EAAEC,UAAU,CAACL,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;IAC3C,CAAC,CAAC,CAAC;IACHE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAET,qBAAqB,CAAC;IAC3D;IACA,MAAMU,IAAI,GAAG;MACX,GAAGX,OAAO;MACVC,qBAAqB,EAAEA;IACzB,CAAC;IAED,MAAMW,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAC/B,mCAAmC,EACnCF,IACF,CAAC;IACD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}