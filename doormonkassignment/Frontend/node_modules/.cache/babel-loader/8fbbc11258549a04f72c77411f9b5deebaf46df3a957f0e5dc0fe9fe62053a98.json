{"ast":null,"code":"var _jsxFileName = \"/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { TextField, Button, Typography, Box, Container, Grid, Paper } from \"@mui/material\";\nimport StudentList from \"./StudentsList/StudentList.js\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport schema from \"./Validation/ValidationSchema.js\";\nimport { postData } from \"./PostAPI/Api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  setSubmitted,\n  setIsError\n}) => {\n  _s();\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$phoneNumber;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"educationalBackground\"\n  });\n  const onSubmit = data => {\n    // Ensure educationalBackground field is initialized as an empty array if not provided\n    const studentData = {\n      ...data,\n      educationalBackground: data.educationalBackground || []\n    };\n    console.log(studentData);\n    setSubmitted(true);\n    postData(studentData).then(responseData => {\n      console.log(\"Data posted successfully:\", responseData);\n    }).catch(error => {\n      setIsError(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          style: {\n            color: \"whitesmoke\"\n          },\n          children: \"Student Registration Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          sx: {\n            p: 2,\n            backgroundColor: \"#FAF9F6\",\n            border: \"1px solid #e0e0e0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n            style: {\n              height: 450\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontFamily: \"Arial, sans-serif\",\n                  fontWeight: \"bold\"\n                },\n                children: \"Basic Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"firstName\"),\n                label: \"First Name\",\n                fullWidth: true,\n                error: !!errors.firstName,\n                helperText: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"lastName\"),\n                label: \"Last Name\",\n                fullWidth: true,\n                error: !!errors.lastName,\n                helperText: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"email\"),\n                label: \"Email\",\n                fullWidth: true,\n                error: !!errors.email,\n                helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"phoneNumber\"),\n                label: \"Phone Number\",\n                fullWidth: true,\n                error: !!errors.phoneNumber,\n                helperText: (_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.message,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  ...register(`educationalBackground.${index}.institutionName`),\n                  label: \"Institution Name\",\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  ...register(`educationalBackground.${index}.passOutYear`),\n                  label: \"Pass-out Year\",\n                  fullWidth: true,\n                  type: \"number\",\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  ...register(`educationalBackground.${index}.cgpiScore`),\n                  label: \"CGPI/Score\",\n                  fullWidth: true,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => remove(index),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, field.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => append({}),\n                children: \"Add Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(StudentList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"vnaHVlp3bBw1hBPvPkHDS2sD5P4=\", false, function () {\n  return [useForm, useFieldArray];\n});\n_c = Form;\nexport default Form;\n\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n\n// import {\n//   TextField,\n//   Button,\n//   Typography,\n//   Box,\n//   Container,\n//   Grid,\n//   Paper,\n// } from \"@mui/material\";\n// import StudentList from \"./StudentsList/StudentList.js\";\n// import { Scrollbars } from \"react-custom-scrollbars\";\n// import schema from \"./Validation/ValidationSchema.js\";\n// import { postData } from \"./PostAPI/Api.js\";\n\n// const Form = ({ setSubmitted, setIsError }) => {\n//   //UseForm hook is used for handling form functionalities including validation\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm({\n//     resolver: yupResolver(schema),\n//   });\n\n//   //onSubmit function will run when user click on submit button\n//   const onSubmit = (data) => {\n//     console.log(data);\n//     setSubmitted(true);\n//     postData(data)\n//       .then((responseData) => {\n//         // Handle successful response\n//         console.log(\"Data posted successfully:\", responseData);\n//       })\n//       .catch((error) => {\n//         // Handle error with setError\n//         setIsError(true);\n//       });\n//   };\n\n//   return (\n//     <Container maxWidth=\"md\">\n//       <Grid container spacing={3}>\n//         <Grid item xs={12} sm={6}>\n//           <Typography\n//             variant=\"h4\"\n//             align=\"center\"\n//             gutterBottom\n//             style={{ color: \"whitesmoke\" }}\n//           >\n//             Student Registration Form\n//           </Typography>\n//           <Paper\n//             elevation={0}\n//             sx={{\n//               p: 2,\n//               backgroundColor: \"#FAF9F6\",\n//               border: \"1px solid #e0e0e0\", // Add border style here\n//             }}\n//           >\n//             <Scrollbars style={{ height: 450 }}>\n//               <form onSubmit={handleSubmit(onSubmit)}>\n//                 <Typography\n//                   variant=\"h6\"\n//                   sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\n//                 >\n//                   Basic Info\n//                 </Typography>\n//                 <TextField\n//                   {...register(\"firstName\")}\n//                   label=\"First Name\"\n//                   fullWidth\n//                   error={!!errors.firstName}\n//                   helperText={errors.firstName?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"lastName\")}\n//                   label=\"Last Name\"\n//                   fullWidth\n//                   error={!!errors.lastName}\n//                   helperText={errors.lastName?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"email\")}\n//                   label=\"Email\"\n//                   fullWidth\n//                   error={!!errors.email}\n//                   helperText={errors.email?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"phoneNumber\")}\n//                   label=\"Phone Number\"\n//                   fullWidth\n//                   error={!!errors.phoneNumber}\n//                   helperText={errors.phoneNumber?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <Typography\n//                   variant=\"h6\"\n//                   sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\n//                 >\n//                   Educational Background\n//                 </Typography>\n//                 <TextField\n//                   {...register(\"institutionName\")}\n//                   label=\"Institution Name\"\n//                   fullWidth\n//                   error={!!errors.institutionName}\n//                   helperText={errors.institutionName?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"passOutYear\")}\n//                   label=\"Pass-out Year\"\n//                   fullWidth\n//                   type=\"number\"\n//                   error={!!errors.passOutYear}\n//                   helperText={\n//                     errors.passOutYear\n//                       ? \"Invalid Passout Year\"\n//                       : errors.passOutYear?.message\n//                   }\n//                   inputProps={{\n//                     min: 2010,\n//                     max: 2023,\n//                   }}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"cgpiScore\")}\n//                   label=\"CGPI/Score\"\n//                   fullWidth\n//                   type=\"text\"\n//                   error={!!errors.cgpiScore}\n//                   helperText={errors.cgpiScore?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <Box mt={2}>\n//                   <Button variant=\"contained\" type=\"submit\">\n//                     Submit\n//                   </Button>\n//                 </Box>\n//               </form>\n//             </Scrollbars>\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12} sm={6}>\n//           <StudentList />\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useForm","useFieldArray","yupResolver","TextField","Button","Typography","Box","Container","Grid","Paper","StudentList","Scrollbars","schema","postData","jsxDEV","_jsxDEV","Form","setSubmitted","setIsError","_s","_errors$firstName","_errors$lastName","_errors$email","_errors$phoneNumber","register","handleSubmit","formState","errors","control","resolver","fields","append","remove","name","onSubmit","data","studentData","educationalBackground","console","log","then","responseData","catch","error","maxWidth","children","container","spacing","item","xs","sm","variant","align","gutterBottom","style","color","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","p","backgroundColor","border","height","fontFamily","fontWeight","label","fullWidth","firstName","helperText","message","margin","lastName","email","phoneNumber","map","field","index","type","onClick","id","mt","_c","$RefreshReg$"],"sources":["/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport StudentList from \"./StudentsList/StudentList.js\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport schema from \"./Validation/ValidationSchema.js\";\r\nimport { postData } from \"./PostAPI/Api.js\";\r\n\r\nconst Form = ({ setSubmitted, setIsError }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"educationalBackground\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    // Ensure educationalBackground field is initialized as an empty array if not provided\r\n    const studentData = {\r\n      ...data,\r\n      educationalBackground: data.educationalBackground || [],\r\n    };\r\n\r\n    console.log(studentData);\r\n    setSubmitted(true);\r\n    postData(studentData)\r\n      .then((responseData) => {\r\n        console.log(\"Data posted successfully:\", responseData);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            style={{ color: \"whitesmoke\" }}\r\n          >\r\n            Student Registration Form\r\n          </Typography>\r\n          <Paper\r\n            elevation={0}\r\n            sx={{\r\n              p: 2,\r\n              backgroundColor: \"#FAF9F6\",\r\n              border: \"1px solid #e0e0e0\",\r\n            }}\r\n          >\r\n            <Scrollbars style={{ height: 450 }}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\r\n                >\r\n                  Basic Info\r\n                </Typography>\r\n                {/* Basic Info Fields */}\r\n                <TextField\r\n                  {...register(\"firstName\")}\r\n                  label=\"First Name\"\r\n                  fullWidth\r\n                  error={!!errors.firstName}\r\n                  helperText={errors.firstName?.message}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  {...register(\"lastName\")}\r\n                  label=\"Last Name\"\r\n                  fullWidth\r\n                  error={!!errors.lastName}\r\n                  helperText={errors.lastName?.message}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  {...register(\"email\")}\r\n                  label=\"Email\"\r\n                  fullWidth\r\n                  error={!!errors.email}\r\n                  helperText={errors.email?.message}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  {...register(\"phoneNumber\")}\r\n                  label=\"Phone Number\"\r\n                  fullWidth\r\n                  error={!!errors.phoneNumber}\r\n                  helperText={errors.phoneNumber?.message}\r\n                  margin=\"normal\"\r\n                />\r\n                {fields.map((field, index) => (\r\n                  <div key={field.id}>\r\n                    <TextField\r\n                      {...register(\r\n                        `educationalBackground.${index}.institutionName`\r\n                      )}\r\n                      label=\"Institution Name\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                      {...register(\r\n                        `educationalBackground.${index}.passOutYear`\r\n                      )}\r\n                      label=\"Pass-out Year\"\r\n                      fullWidth\r\n                      type=\"number\"\r\n                      margin=\"normal\"\r\n                    />\r\n                    <TextField\r\n                      {...register(`educationalBackground.${index}.cgpiScore`)}\r\n                      label=\"CGPI/Score\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                    />\r\n                    <Button onClick={() => remove(index)}>Remove</Button>\r\n                  </div>\r\n                ))}\r\n                <Button onClick={() => append({})}>Add Field</Button>\r\n                <Box mt={2}>\r\n                  <Button variant=\"contained\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            </Scrollbars>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <StudentList />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\n// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\n// import {\r\n//   TextField,\r\n//   Button,\r\n//   Typography,\r\n//   Box,\r\n//   Container,\r\n//   Grid,\r\n//   Paper,\r\n// } from \"@mui/material\";\r\n// import StudentList from \"./StudentsList/StudentList.js\";\r\n// import { Scrollbars } from \"react-custom-scrollbars\";\r\n// import schema from \"./Validation/ValidationSchema.js\";\r\n// import { postData } from \"./PostAPI/Api.js\";\r\n\r\n// const Form = ({ setSubmitted, setIsError }) => {\r\n//   //UseForm hook is used for handling form functionalities including validation\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm({\r\n//     resolver: yupResolver(schema),\r\n//   });\r\n\r\n//   //onSubmit function will run when user click on submit button\r\n//   const onSubmit = (data) => {\r\n//     console.log(data);\r\n//     setSubmitted(true);\r\n//     postData(data)\r\n//       .then((responseData) => {\r\n//         // Handle successful response\r\n//         console.log(\"Data posted successfully:\", responseData);\r\n//       })\r\n//       .catch((error) => {\r\n//         // Handle error with setError\r\n//         setIsError(true);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"md\">\r\n//       <Grid container spacing={3}>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <Typography\r\n//             variant=\"h4\"\r\n//             align=\"center\"\r\n//             gutterBottom\r\n//             style={{ color: \"whitesmoke\" }}\r\n//           >\r\n//             Student Registration Form\r\n//           </Typography>\r\n//           <Paper\r\n//             elevation={0}\r\n//             sx={{\r\n//               p: 2,\r\n//               backgroundColor: \"#FAF9F6\",\r\n//               border: \"1px solid #e0e0e0\", // Add border style here\r\n//             }}\r\n//           >\r\n//             <Scrollbars style={{ height: 450 }}>\r\n//               <form onSubmit={handleSubmit(onSubmit)}>\r\n//                 <Typography\r\n//                   variant=\"h6\"\r\n//                   sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\r\n//                 >\r\n//                   Basic Info\r\n//                 </Typography>\r\n//                 <TextField\r\n//                   {...register(\"firstName\")}\r\n//                   label=\"First Name\"\r\n//                   fullWidth\r\n//                   error={!!errors.firstName}\r\n//                   helperText={errors.firstName?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"lastName\")}\r\n//                   label=\"Last Name\"\r\n//                   fullWidth\r\n//                   error={!!errors.lastName}\r\n//                   helperText={errors.lastName?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"email\")}\r\n//                   label=\"Email\"\r\n//                   fullWidth\r\n//                   error={!!errors.email}\r\n//                   helperText={errors.email?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"phoneNumber\")}\r\n//                   label=\"Phone Number\"\r\n//                   fullWidth\r\n//                   error={!!errors.phoneNumber}\r\n//                   helperText={errors.phoneNumber?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <Typography\r\n//                   variant=\"h6\"\r\n//                   sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\r\n//                 >\r\n//                   Educational Background\r\n//                 </Typography>\r\n//                 <TextField\r\n//                   {...register(\"institutionName\")}\r\n//                   label=\"Institution Name\"\r\n//                   fullWidth\r\n//                   error={!!errors.institutionName}\r\n//                   helperText={errors.institutionName?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"passOutYear\")}\r\n//                   label=\"Pass-out Year\"\r\n//                   fullWidth\r\n//                   type=\"number\"\r\n//                   error={!!errors.passOutYear}\r\n//                   helperText={\r\n//                     errors.passOutYear\r\n//                       ? \"Invalid Passout Year\"\r\n//                       : errors.passOutYear?.message\r\n//                   }\r\n//                   inputProps={{\r\n//                     min: 2010,\r\n//                     max: 2023,\r\n//                   }}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"cgpiScore\")}\r\n//                   label=\"CGPI/Score\"\r\n//                   fullWidth\r\n//                   type=\"text\"\r\n//                   error={!!errors.cgpiScore}\r\n//                   helperText={errors.cgpiScore?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <Box mt={2}>\r\n//                   <Button variant=\"contained\" type=\"submit\">\r\n//                     Submit\r\n//                   </Button>\r\n//                 </Box>\r\n//               </form>\r\n//             </Scrollbars>\r\n//           </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <StudentList />\r\n//         </Grid>\r\n//       </Grid>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}