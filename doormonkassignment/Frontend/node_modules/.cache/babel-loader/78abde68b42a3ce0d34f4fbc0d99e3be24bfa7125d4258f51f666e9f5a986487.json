{"ast":null,"code":"var _jsxFileName = \"/home/manshreepadale/DoormonkAssignment/doormonkassignment/Frontend/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { TextField, Button } from \"@mui/material\"; // Import Material-UI components\nimport StudentList from \"./StudentList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().required().max(20),\n  lastName: yup.string().required().max(20),\n  email: yup.string().required().email(),\n  phoneNumber: yup.string().required().matches(/^\\d{10}$/, \"Invalid phone number\")\n});\nconst Form = ({\n  setSubmitted\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  async function postData(student) {\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/students\", student);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n      throw error; // Re-throw the error to handle it in the calling code\n    }\n  }\n  const onSubmit = data => {\n    console.log(data);\n    setSubmitted(true);\n    postData(data).then(responseData => {\n      console.log(\"Data posted successfully:\", responseData);\n      // Handle successful response\n    }).catch(error => {\n      // Handle error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        ...register(\"firstName\"),\n        label: \"First Name\",\n        error: !!errors.firstName,\n        helperText: errors.firstName ? errors.firstName.message : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        ...register(\"lastName\"),\n        label: \"Last Name\",\n        error: !!errors.lastName,\n        helperText: errors.lastName ? errors.lastName.message : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        ...register(\"email\"),\n        label: \"Email\",\n        error: !!errors.email,\n        helperText: errors.email ? errors.email.message : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        ...register(\"phoneNumber\"),\n        label: \"Phone Number\",\n        error: !!errors.phoneNumber,\n        helperText: errors.phoneNumber ? errors.phoneNumber.message : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nexport default Form;\n\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import * as yup from \"yup\";\n// import axios from \"axios\";\n// import StudentList from \"./StudentList\";\n\n// const schema = yup.object().shape({\n//   firstName: yup.string().required().max(20),\n//   lastName: yup.string().required().max(20),\n//   email: yup.string().required().email(),\n//   phoneNumber: yup\n//     .string()\n//     .required()\n//     .matches(/^\\d{10}$/, \"Invalid phone number\"),\n// });\n\n// const Form = ({ setSubmitted }) => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm({\n//     resolver: yupResolver(schema),\n//   });\n\n//   async function postData(student) {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8080/api/students\",\n//         student\n//       );\n//       return response.data;\n//     } catch (error) {\n//       console.error(\"Error posting data:\", error);\n//       throw error; // Re-throw the error to handle it in the calling code\n//     }\n//   }\n//   const onSubmit = (data) => {\n//     console.log(data);\n//     setSubmitted(true);\n//     postData(data)\n//       .then((responseData) => {\n//         console.log(\"Data posted successfully:\", responseData);\n//         // Handle successful response\n//       })\n//       .catch((error) => {\n//         // Handle error\n//       });\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={handleSubmit(onSubmit)}>\n//         <input {...register(\"firstName\")} placeholder=\"First Name\" />\n//         {errors.firstName && <p>{errors.firstName.message}</p>}\n//         <input {...register(\"lastName\")} placeholder=\"Last Name\" />\n//         {errors.lastName && <p>{errors.lastName.message}</p>}\n//         <input {...register(\"email\")} placeholder=\"Email\" />\n//         {errors.email && <p>{errors.email.message}</p>}\n//         <input {...register(\"phoneNumber\")} placeholder=\"Phone Number\" />\n//         {errors.phoneNumber && <p>{errors.phoneNumber.message}</p>}\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       <StudentList />\n//     </>\n//   );\n// };\n\n// export default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","yupResolver","yup","axios","TextField","Button","StudentList","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","object","shape","firstName","string","required","max","lastName","email","phoneNumber","matches","Form","setSubmitted","_s","register","handleSubmit","formState","errors","resolver","postData","student","response","post","data","error","console","onSubmit","log","then","responseData","catch","children","label","helperText","message","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","_c","$RefreshReg$"],"sources":["/home/manshreepadale/DoormonkAssignment/doormonkassignment/Frontend/src/components/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { TextField, Button } from \"@mui/material\"; // Import Material-UI components\r\nimport StudentList from \"./StudentList\";\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup.string().required().max(20),\r\n  lastName: yup.string().required().max(20),\r\n  email: yup.string().required().email(),\r\n  phoneNumber: yup\r\n    .string()\r\n    .required()\r\n    .matches(/^\\d{10}$/, \"Invalid phone number\"),\r\n});\r\n\r\nconst Form = ({ setSubmitted }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  async function postData(student) {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/students\",\r\n        student\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error posting data:\", error);\r\n      throw error; // Re-throw the error to handle it in the calling code\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    setSubmitted(true);\r\n    postData(data)\r\n      .then((responseData) => {\r\n        console.log(\"Data posted successfully:\", responseData);\r\n        // Handle successful response\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <TextField\r\n          {...register(\"firstName\")}\r\n          label=\"First Name\"\r\n          error={!!errors.firstName}\r\n          helperText={errors.firstName ? errors.firstName.message : \"\"}\r\n        />\r\n        <TextField\r\n          {...register(\"lastName\")}\r\n          label=\"Last Name\"\r\n          error={!!errors.lastName}\r\n          helperText={errors.lastName ? errors.lastName.message : \"\"}\r\n        />\r\n        <TextField\r\n          {...register(\"email\")}\r\n          label=\"Email\"\r\n          error={!!errors.email}\r\n          helperText={errors.email ? errors.email.message : \"\"}\r\n        />\r\n        <TextField\r\n          {...register(\"phoneNumber\")}\r\n          label=\"Phone Number\"\r\n          error={!!errors.phoneNumber}\r\n          helperText={errors.phoneNumber ? errors.phoneNumber.message : \"\"}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n      <StudentList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\n// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import * as yup from \"yup\";\r\n// import axios from \"axios\";\r\n// import StudentList from \"./StudentList\";\r\n\r\n// const schema = yup.object().shape({\r\n//   firstName: yup.string().required().max(20),\r\n//   lastName: yup.string().required().max(20),\r\n//   email: yup.string().required().email(),\r\n//   phoneNumber: yup\r\n//     .string()\r\n//     .required()\r\n//     .matches(/^\\d{10}$/, \"Invalid phone number\"),\r\n// });\r\n\r\n// const Form = ({ setSubmitted }) => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm({\r\n//     resolver: yupResolver(schema),\r\n//   });\r\n\r\n//   async function postData(student) {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8080/api/students\",\r\n//         student\r\n//       );\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       console.error(\"Error posting data:\", error);\r\n//       throw error; // Re-throw the error to handle it in the calling code\r\n//     }\r\n//   }\r\n//   const onSubmit = (data) => {\r\n//     console.log(data);\r\n//     setSubmitted(true);\r\n//     postData(data)\r\n//       .then((responseData) => {\r\n//         console.log(\"Data posted successfully:\", responseData);\r\n//         // Handle successful response\r\n//       })\r\n//       .catch((error) => {\r\n//         // Handle error\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <form onSubmit={handleSubmit(onSubmit)}>\r\n//         <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n//         {errors.firstName && <p>{errors.firstName.message}</p>}\r\n//         <input {...register(\"lastName\")} placeholder=\"Last Name\" />\r\n//         {errors.lastName && <p>{errors.lastName.message}</p>}\r\n//         <input {...register(\"email\")} placeholder=\"Email\" />\r\n//         {errors.email && <p>{errors.email.message}</p>}\r\n//         <input {...register(\"phoneNumber\")} placeholder=\"Phone Number\" />\r\n//         {errors.phoneNumber && <p>{errors.phoneNumber.message}</p>}\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//       <StudentList />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}