{"ast":null,"code":"var _jsxFileName = \"/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/StudentsList/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { List, ListItem, ListItemText, Container, Paper, Typography } from \"@mui/material\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  // GET api to retrive and Display Studentlist\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/students\").then(response => {\n      setStudents(response.data);\n      console.log(\"Students data:\", response.data);\n    }).catch(error => {\n      console.error(\"Error fetching students:\", error.response ? error.response.data : error.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      style: {\n        color: \"#2196f3\"\n      },\n      children: \"Registered Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2,\n        borderRadius: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n        style: {\n          height: 483\n        },\n        renderThumbVertical: ({\n          style\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...style,\n            backgroundColor: \"transparent\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            padding: 0\n          },\n          children: students && students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                width: \"100%\",\n                p: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${student.firstName || \"\"} ${student.lastName || \"\"}`,\n                secondary: `Email: ${student.email || \"\"}, Phone: ${student.phoneNumber || \"\"}, Educational Background: ${student.educationalBackground && student.educationalBackground.map(edu => `Institute: ${edu.institutionName}, Pass Out Year: ${edu.passOutYear}, CGPI: ${edu.cgpiScore}`).join(\"\\n\")}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, student.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"No student Registered yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentList, \"Xxsbsc/n21pueGlfwfykfeIEF1E=\");\n_c = StudentList;\nexport default StudentList;\n\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import {\n//   List,\n//   ListItem,\n//   ListItemText,\n//   Container,\n//   Paper,\n//   Typography,\n// } from \"@mui/material\";\n// import { Scrollbars } from \"react-custom-scrollbars\";\n\n// const StudentList = () => {\n//   const [students, setStudents] = useState([]);\n//   // GET api to retrive and Display Studentlist\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:8080/api/students\")\n//       .then((response) => {\n//         setStudents(response.data);\n//         console.log(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching students:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <Container maxWidth=\"sm\">\n//       <Typography\n//         variant=\"h4\"\n//         align=\"center\"\n//         gutterBottom\n//         style={{ color: \"whitesmoke\" }}\n//       >\n//         Registered Students\n//       </Typography>\n//       <Paper elevation={3}>\n//         <Scrollbars style={{ height: 483 }}>\n//           <List sx={{ padding: 0 }}>\n//             {students && students.length > 0 ? (\n//               students.map((student) => (\n//                 <ListItem key={student.id}>\n//                   <Paper elevation={0} sx={{ width: \"100%\", p: 2 }}>\n//                     <ListItemText\n//                       primary={`${student.firstName || \"\"} ${\n//                         student.lastName || \"\"\n//                       }`}\n//                       secondary={`Email: ${student.email || \"\"}, Phone: ${\n//                         student.phoneNumber || \"\"\n//                       },Institue:${student.institutionName}, Pass Out Year:${\n//                         student.passOutYear\n//                       }, CGPI:${student.cgpiScore}`}\n//                     />\n//                   </Paper>\n//                 </ListItem>\n//               ))\n//             ) : (\n//               <ListItem>\n//                 <ListItemText primary=\"No student Registered yet\" />\n//               </ListItem>\n//             )}\n//           </List>\n//         </Scrollbars>\n//       </Paper>\n//     </Container>\n//   );\n// };\n\n// export default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","List","ListItem","ListItemText","Container","Paper","Typography","Scrollbars","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","get","then","response","data","console","log","catch","error","message","maxWidth","children","variant","align","gutterBottom","style","color","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","p","borderRadius","height","renderThumbVertical","backgroundColor","padding","length","map","student","width","primary","firstName","lastName","secondary","email","phoneNumber","educationalBackground","edu","institutionName","passOutYear","cgpiScore","join","id","_c","$RefreshReg$"],"sources":["/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/StudentsList/StudentList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst StudentList = () => {\r\n  const [students, setStudents] = useState([]);\r\n  // GET api to retrive and Display Studentlist\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/students\")\r\n      .then((response) => {\r\n        setStudents(response.data);\r\n        console.log(\"Students data:\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"Error fetching students:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        gutterBottom\r\n        style={{ color: \"#2196f3\" }}\r\n      >\r\n        Registered Students\r\n      </Typography>\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          p: 2,\r\n          borderRadius: 10,\r\n        }}\r\n      >\r\n        <Scrollbars\r\n          style={{ height: 483 }}\r\n          renderThumbVertical={({ style }) => (\r\n            <div style={{ ...style, backgroundColor: \"transparent\" }} />\r\n          )}\r\n        >\r\n          <List sx={{ padding: 0 }}>\r\n            {students && students.length > 0 ? (\r\n              students.map((student) => (\r\n                <ListItem key={student.id}>\r\n                  <Paper elevation={0} sx={{ width: \"100%\", p: 2 }}>\r\n                    <ListItemText\r\n                      primary={`${student.firstName || \"\"} ${\r\n                        student.lastName || \"\"\r\n                      }`}\r\n                      secondary={`Email: ${student.email || \"\"}, Phone: ${\r\n                        student.phoneNumber || \"\"\r\n                      }, Educational Background: ${\r\n                        student.educationalBackground &&\r\n                        student.educationalBackground\r\n                          .map(\r\n                            (edu) =>\r\n                              `Institute: ${edu.institutionName}, Pass Out Year: ${edu.passOutYear}, CGPI: ${edu.cgpiScore}`\r\n                          )\r\n                          .join(\"\\n\")\r\n                      }`}\r\n                    />\r\n                  </Paper>\r\n                </ListItem>\r\n              ))\r\n            ) : (\r\n              <ListItem>\r\n                <ListItemText primary=\"No student Registered yet\" />\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Scrollbars>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import {\r\n//   List,\r\n//   ListItem,\r\n//   ListItemText,\r\n//   Container,\r\n//   Paper,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\n// import { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\n// const StudentList = () => {\r\n//   const [students, setStudents] = useState([]);\r\n//   // GET api to retrive and Display Studentlist\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:8080/api/students\")\r\n//       .then((response) => {\r\n//         setStudents(response.data);\r\n//         console.log(response.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error fetching students:\", error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\">\r\n//       <Typography\r\n//         variant=\"h4\"\r\n//         align=\"center\"\r\n//         gutterBottom\r\n//         style={{ color: \"whitesmoke\" }}\r\n//       >\r\n//         Registered Students\r\n//       </Typography>\r\n//       <Paper elevation={3}>\r\n//         <Scrollbars style={{ height: 483 }}>\r\n//           <List sx={{ padding: 0 }}>\r\n//             {students && students.length > 0 ? (\r\n//               students.map((student) => (\r\n//                 <ListItem key={student.id}>\r\n//                   <Paper elevation={0} sx={{ width: \"100%\", p: 2 }}>\r\n//                     <ListItemText\r\n//                       primary={`${student.firstName || \"\"} ${\r\n//                         student.lastName || \"\"\r\n//                       }`}\r\n//                       secondary={`Email: ${student.email || \"\"}, Phone: ${\r\n//                         student.phoneNumber || \"\"\r\n//                       },Institue:${student.institutionName}, Pass Out Year:${\r\n//                         student.passOutYear\r\n//                       }, CGPI:${student.cgpiScore}`}\r\n//                     />\r\n//                   </Paper>\r\n//                 </ListItem>\r\n//               ))\r\n//             ) : (\r\n//               <ListItem>\r\n//                 <ListItemText primary=\"No student Registered yet\" />\r\n//               </ListItem>\r\n//             )}\r\n//           </List>\r\n//         </Scrollbars>\r\n//       </Paper>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default StudentList;\r\n"],"mappings":"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AC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QACX;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACtB,EAAA,CA3EID,WAAW;AAAAiD,EAAA,GAAXjD,WAAW;AA6EjB,eAAeA,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}