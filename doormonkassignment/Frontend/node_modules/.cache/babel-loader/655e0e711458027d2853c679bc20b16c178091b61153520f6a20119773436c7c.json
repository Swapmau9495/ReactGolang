{"ast":null,"code":"var _jsxFileName = \"/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { TextField, Button, Typography, Box, Container, Grid, Paper, IconButton, Divider } from \"@mui/material\";\nimport StudentList from \"./StudentsList/StudentList.js\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport schema from \"./Validation/ValidationSchema.js\";\nimport { postData } from \"./PostAPI/Api.js\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  setSubmitted,\n  setIsError\n}) => {\n  _s();\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$phoneNumber;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [dynamicFields, setDynamicFields] = useState([{\n    institutionName: \"\",\n    passOutYear: \"\",\n    cgpiScore: \"\"\n  }]);\n  const addDynamicField = () => {\n    setDynamicFields([...dynamicFields, {\n      institutionName: \"\",\n      passOutYear: \"\",\n      cgpiScore: \"\"\n    }]);\n  };\n  const removeDynamicField = index => {\n    if (index > 0) {\n      const updatedFields = dynamicFields.filter((_, i) => i !== index);\n      setDynamicFields(updatedFields);\n    }\n  };\n  const onSubmit = data => {\n    // Ensure educationalBackground field is initialized as an empty array if not provided\n    const studentData = {\n      ...data,\n      educationalBackground: data.educationalBackground || []\n    };\n    console.log(studentData);\n    setSubmitted(true);\n    postData(studentData).then(responseData => {\n      console.log(\"Data posted successfully:\", responseData);\n    }).catch(error => {\n      setIsError(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          style: {\n            color: \"whitesmoke\"\n          },\n          children: \"Student Registration Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            borderRadius: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n            style: {\n              height: 450\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Basic Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"firstName\"),\n                label: \"First Name\",\n                fullWidth: true,\n                error: !!errors.firstName,\n                helperText: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message,\n                margin: \"normal\",\n                sx: {\n                  borderRadius: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"lastName\"),\n                label: \"Last Name\",\n                fullWidth: true,\n                error: !!errors.lastName,\n                helperText: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message,\n                margin: \"normal\",\n                sx: {\n                  borderRadius: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"email\"),\n                label: \"Email\",\n                fullWidth: true,\n                error: !!errors.email,\n                helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n                margin: \"normal\",\n                sx: {\n                  borderRadius: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                ...register(\"phoneNumber\"),\n                label: \"Phone Number\",\n                fullWidth: true,\n                error: !!errors.phoneNumber,\n                helperText: (_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.message,\n                margin: \"normal\",\n                sx: {\n                  borderRadius: 10\n                },\n                InputProps: {\n                  sx: {\n                    borderRadius: 10\n                  },\n                  style: {\n                    border: \"1px solid #EAEAEA\",\n                    padding: \"8px 0 8px 8px\",\n                    fontFamily: \"Roboto\",\n                    fontSize: \"12px\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Educational Background\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), dynamicFields.map((field, index) => {\n                var _errors$educationalBa, _errors$educationalBa2, _errors$educationalBa3, _errors$educationalBa4, _errors$educationalBa5, _errors$educationalBa6, _errors$educationalBa7, _errors$educationalBa8, _errors$educationalBa9, _errors$educationalBa10, _errors$educationalBa11, _errors$educationalBa12, _errors$educationalBa13, _errors$educationalBa14, _errors$educationalBa15;\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 2,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: \"calc(100% - 48px)\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      ...register(`educationalBackground[${index}].institutionName`),\n                      label: \"Institution Name\",\n                      fullWidth: true,\n                      error: !!((_errors$educationalBa = errors.educationalBackground) !== null && _errors$educationalBa !== void 0 && (_errors$educationalBa2 = _errors$educationalBa[index]) !== null && _errors$educationalBa2 !== void 0 && _errors$educationalBa2.institutionName),\n                      helperText: (_errors$educationalBa3 = errors.educationalBackground) === null || _errors$educationalBa3 === void 0 ? void 0 : (_errors$educationalBa4 = _errors$educationalBa3[index]) === null || _errors$educationalBa4 === void 0 ? void 0 : (_errors$educationalBa5 = _errors$educationalBa4.institutionName) === null || _errors$educationalBa5 === void 0 ? void 0 : _errors$educationalBa5.message,\n                      margin: \"normal\",\n                      sx: {\n                        borderRadius: 10\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      ...register(`educationalBackground[${index}].passOutYear`),\n                      label: \"Pass-out Year\",\n                      fullWidth: true,\n                      type: \"number\",\n                      error: !!((_errors$educationalBa6 = errors.educationalBackground) !== null && _errors$educationalBa6 !== void 0 && (_errors$educationalBa7 = _errors$educationalBa6[index]) !== null && _errors$educationalBa7 !== void 0 && _errors$educationalBa7.passOutYear),\n                      helperText: (_errors$educationalBa8 = errors.educationalBackground) === null || _errors$educationalBa8 === void 0 ? void 0 : (_errors$educationalBa9 = _errors$educationalBa8[index]) === null || _errors$educationalBa9 === void 0 ? void 0 : (_errors$educationalBa10 = _errors$educationalBa9.passOutYear) === null || _errors$educationalBa10 === void 0 ? void 0 : _errors$educationalBa10.message,\n                      margin: \"normal\",\n                      sx: {\n                        borderRadius: 10\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      ...register(`educationalBackground[${index}].cgpiScore`),\n                      label: \"CGPI/Score\",\n                      fullWidth: true,\n                      error: !!((_errors$educationalBa11 = errors.educationalBackground) !== null && _errors$educationalBa11 !== void 0 && (_errors$educationalBa12 = _errors$educationalBa11[index]) !== null && _errors$educationalBa12 !== void 0 && _errors$educationalBa12.cgpiScore),\n                      helperText: (_errors$educationalBa13 = errors.educationalBackground) === null || _errors$educationalBa13 === void 0 ? void 0 : (_errors$educationalBa14 = _errors$educationalBa13[index]) === null || _errors$educationalBa14 === void 0 ? void 0 : (_errors$educationalBa15 = _errors$educationalBa14.cgpiScore) === null || _errors$educationalBa15 === void 0 ? void 0 : _errors$educationalBa15.message,\n                      margin: \"normal\",\n                      sx: {\n                        borderRadius: 10\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this), Object.keys(dynamicFields).length > 1 && index > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => removeDynamicField(index),\n                    children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addDynamicField,\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 30\n                }, this),\n                children: \"Add Educational Background\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(StudentList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"y49jEp8vXI9qFLbKddfGKMnNMs0=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nexport default Form;\n\n// import React, { useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { yupResolver } from \"@hookform/resolvers/yup\";\n// import {\n//   TextField,\n//   Button,\n//   Typography,\n//   Box,\n//   Container,\n//   Grid,\n//   Paper,\n// } from \"@mui/material\";\n// import StudentList from \"./StudentsList/StudentList.js\";\n// import { Scrollbars } from \"react-custom-scrollbars\";\n// import schema from \"./Validation/ValidationSchema.js\";\n// import { postData } from \"./PostAPI/Api.js\";\n\n// const Form = ({ setSubmitted, setIsError }) => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm({\n//     resolver: yupResolver(schema),\n//   });\n\n//   const [dynamicFields, setDynamicFields] = useState([\n//     { institutionName: \"\", passOutYear: \"\", cgpiScore: \"\" },\n//   ]);\n\n//   const addDynamicField = () => {\n//     setDynamicFields([\n//       ...dynamicFields,\n//       { institutionName: \"\", passOutYear: \"\", cgpiScore: \"\" },\n//     ]);\n//   };\n\n//   const removeDynamicField = (index) => {\n//     const updatedFields = [...dynamicFields];\n//     updatedFields.splice(index, 1);\n//     setDynamicFields(updatedFields);\n//   };\n\n//   console.log(\"error\", errors);\n\n//   const onSubmit = (data) => {\n//     // Ensure educationalBackground field is initialized as an empty array if not provided\n//     const studentData = {\n//       ...data,\n//       educationalBackground: data.educationalBackground || [],\n//     };\n\n//     setSubmitted(true);\n//     postData(studentData)\n//       .then((responseData) => {\n//         console.log(\"Data posted successfully:\", responseData);\n//       })\n//       .catch((error) => {\n//         setIsError(true);\n//       });\n//   };\n\n//   return (\n//     <Container maxWidth=\"md\">\n//       <Grid container spacing={3}>\n//         <Grid item xs={12} sm={6}>\n//           <Typography\n//             variant=\"h4\"\n//             align=\"center\"\n//             gutterBottom\n//             style={{ color: \"whitesmoke\" }}\n//           >\n//             Student Registration Form\n//           </Typography>\n//           <Paper\n//             elevation={0}\n//             sx={{\n//               p: 2,\n//               backgroundColor: \"#FAF9F6\",\n//               border: \"1px solid #e0e0e0\",\n//             }}\n//           >\n//             <Scrollbars style={{ height: 450 }}>\n//               <form onSubmit={handleSubmit(onSubmit)}>\n//                 <Typography\n//                   variant=\"h6\"\n//                   sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\n//                 >\n//                   Basic Info\n//                 </Typography>\n//                 {/* Basic Info Fields */}\n//                 <TextField\n//                   {...register(\"firstName\")}\n//                   label=\"First Name\"\n//                   fullWidth\n//                   error={!!errors.firstName}\n//                   helperText={errors.firstName?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"lastName\")}\n//                   label=\"Last Name\"\n//                   fullWidth\n//                   error={!!errors.lastName}\n//                   helperText={errors.lastName?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"email\")}\n//                   label=\"Email\"\n//                   fullWidth\n//                   error={!!errors.email}\n//                   helperText={errors.email?.message}\n//                   margin=\"normal\"\n//                 />\n//                 <TextField\n//                   {...register(\"phoneNumber\")}\n//                   label=\"Phone Number\"\n//                   fullWidth\n//                   error={!!errors.phoneNumber}\n//                   helperText={errors.phoneNumber?.message}\n//                   margin=\"normal\"\n//                 />\n//                 {dynamicFields.map((field, index) => (\n//                   <div key={index}>\n//                     <TextField\n//                       {...register(\n//                         `educationalBackground[${index}].institutionName`\n//                       )}\n//                       label=\"Institution Name\"\n//                       fullWidth\n//                       error={\n//                         !!errors.educationalBackground?.[index]?.institutionName\n//                       }\n//                       helperText={\n//                         errors.educationalBackground?.[index]?.institutionName\n//                           ?.message\n//                       }\n//                       margin=\"normal\"\n//                     />\n//                     <TextField\n//                       {...register(\n//                         `educationalBackground[${index}].passOutYear`\n//                       )}\n//                       label=\"Pass-out Year\"\n//                       fullWidth\n//                       type=\"number\"\n//                       error={\n//                         !!errors.educationalBackground?.[index]?.passOutYear\n//                       }\n//                       helperText={\n//                         errors.educationalBackground?.[index]?.passOutYear\n//                           ?.message\n//                       }\n//                       margin=\"normal\"\n//                     />\n//                     <TextField\n//                       {...register(`educationalBackground[${index}].cgpiScore`)}\n//                       label=\"CGPI/Score\"\n//                       fullWidth\n//                       error={!!errors.educationalBackground?.[index]?.cgpiScore}\n//                       helperText={\n//                         errors.educationalBackground?.[index]?.cgpiScore\n//                           ?.message\n//                       }\n//                       margin=\"normal\"\n//                     />\n//                     <Button onClick={() => removeDynamicField(index)}>\n//                       Remove\n//                     </Button>\n//                   </div>\n//                 ))}\n\n//                 <Button onClick={addDynamicField}>Add Field</Button>\n//                 <Box mt={2}>\n//                   <Button variant=\"contained\" type=\"submit\">\n//                     Submit\n//                   </Button>\n//                 </Box>\n//               </form>\n//             </Scrollbars>\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12} sm={6}>\n//           <StudentList />\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useForm","yupResolver","TextField","Button","Typography","Box","Container","Grid","Paper","IconButton","Divider","StudentList","Scrollbars","schema","postData","AddIcon","RemoveIcon","jsxDEV","_jsxDEV","Form","setSubmitted","setIsError","_s","_errors$firstName","_errors$lastName","_errors$email","_errors$phoneNumber","register","handleSubmit","formState","errors","resolver","dynamicFields","setDynamicFields","institutionName","passOutYear","cgpiScore","addDynamicField","removeDynamicField","index","updatedFields","filter","_","i","onSubmit","data","studentData","educationalBackground","console","log","then","responseData","catch","error","maxWidth","children","container","spacing","item","xs","sm","variant","align","gutterBottom","style","color","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","p","borderRadius","height","label","fullWidth","firstName","helperText","message","margin","lastName","email","phoneNumber","InputProps","border","padding","fontFamily","fontSize","my","map","field","_errors$educationalBa","_errors$educationalBa2","_errors$educationalBa3","_errors$educationalBa4","_errors$educationalBa5","_errors$educationalBa6","_errors$educationalBa7","_errors$educationalBa8","_errors$educationalBa9","_errors$educationalBa10","_errors$educationalBa11","_errors$educationalBa12","_errors$educationalBa13","_errors$educationalBa14","_errors$educationalBa15","mb","display","alignItems","justifyContent","width","type","Object","keys","length","onClick","startIcon","mt","_c","$RefreshReg$"],"sources":["/home/manshreepadale/Documents/ReactGolangStudentsProject/ReactGolang/doormonkassignment/Frontend/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport StudentList from \"./StudentsList/StudentList.js\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport schema from \"./Validation/ValidationSchema.js\";\r\nimport { postData } from \"./PostAPI/Api.js\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\n\r\nconst Form = ({ setSubmitted, setIsError }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [dynamicFields, setDynamicFields] = useState([\r\n    { institutionName: \"\", passOutYear: \"\", cgpiScore: \"\" },\r\n  ]);\r\n\r\n  const addDynamicField = () => {\r\n    setDynamicFields([\r\n      ...dynamicFields,\r\n      { institutionName: \"\", passOutYear: \"\", cgpiScore: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const removeDynamicField = (index) => {\r\n    if (index > 0) {\r\n      const updatedFields = dynamicFields.filter((_, i) => i !== index);\r\n      setDynamicFields(updatedFields);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    // Ensure educationalBackground field is initialized as an empty array if not provided\r\n    const studentData = {\r\n      ...data,\r\n      educationalBackground: data.educationalBackground || [],\r\n    };\r\n\r\n    console.log(studentData);\r\n    setSubmitted(true);\r\n    postData(studentData)\r\n      .then((responseData) => {\r\n        console.log(\"Data posted successfully:\", responseData);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            style={{ color: \"whitesmoke\" }}\r\n          >\r\n            Student Registration Form\r\n          </Typography>\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 3,\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <Scrollbars style={{ height: 450 }}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Basic Info\r\n                </Typography>\r\n                <TextField\r\n                  {...register(\"firstName\")}\r\n                  label=\"First Name\"\r\n                  fullWidth\r\n                  error={!!errors.firstName}\r\n                  helperText={errors.firstName?.message}\r\n                  margin=\"normal\"\r\n                  sx={{ borderRadius: 10 }}\r\n                />\r\n                <TextField\r\n                  {...register(\"lastName\")}\r\n                  label=\"Last Name\"\r\n                  fullWidth\r\n                  error={!!errors.lastName}\r\n                  helperText={errors.lastName?.message}\r\n                  margin=\"normal\"\r\n                  sx={{ borderRadius: 10 }}\r\n                />\r\n                <TextField\r\n                  {...register(\"email\")}\r\n                  label=\"Email\"\r\n                  fullWidth\r\n                  error={!!errors.email}\r\n                  helperText={errors.email?.message}\r\n                  margin=\"normal\"\r\n                  sx={{ borderRadius: 10 }}\r\n                />\r\n                <TextField\r\n                  {...register(\"phoneNumber\")}\r\n                  label=\"Phone Number\"\r\n                  fullWidth\r\n                  error={!!errors.phoneNumber}\r\n                  helperText={errors.phoneNumber?.message}\r\n                  margin=\"normal\"\r\n                  sx={{ borderRadius: 10 }}\r\n                  InputProps={{\r\n                    sx: { borderRadius: 10 },\r\n                    style: {\r\n                      border: \"1px solid #EAEAEA\",\r\n                      padding: \"8px 0 8px 8px\",\r\n                      fontFamily: \"Roboto\",\r\n                      fontSize: \"12px\",\r\n                    },\r\n                  }}\r\n                />\r\n                <Divider sx={{ my: 2 }} />\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Educational Background\r\n                </Typography>\r\n                {dynamicFields.map((field, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    sx={{\r\n                      mb: 2,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <Box sx={{ width: \"calc(100% - 48px)\" }}>\r\n                      <TextField\r\n                        {...register(\r\n                          `educationalBackground[${index}].institutionName`\r\n                        )}\r\n                        label=\"Institution Name\"\r\n                        fullWidth\r\n                        error={\r\n                          !!errors.educationalBackground?.[index]\r\n                            ?.institutionName\r\n                        }\r\n                        helperText={\r\n                          errors.educationalBackground?.[index]?.institutionName\r\n                            ?.message\r\n                        }\r\n                        margin=\"normal\"\r\n                        sx={{ borderRadius: 10 }}\r\n                      />\r\n                      <TextField\r\n                        {...register(\r\n                          `educationalBackground[${index}].passOutYear`\r\n                        )}\r\n                        label=\"Pass-out Year\"\r\n                        fullWidth\r\n                        type=\"number\"\r\n                        error={\r\n                          !!errors.educationalBackground?.[index]?.passOutYear\r\n                        }\r\n                        helperText={\r\n                          errors.educationalBackground?.[index]?.passOutYear\r\n                            ?.message\r\n                        }\r\n                        margin=\"normal\"\r\n                        sx={{ borderRadius: 10 }}\r\n                      />\r\n                      <TextField\r\n                        {...register(\r\n                          `educationalBackground[${index}].cgpiScore`\r\n                        )}\r\n                        label=\"CGPI/Score\"\r\n                        fullWidth\r\n                        error={\r\n                          !!errors.educationalBackground?.[index]?.cgpiScore\r\n                        }\r\n                        helperText={\r\n                          errors.educationalBackground?.[index]?.cgpiScore\r\n                            ?.message\r\n                        }\r\n                        margin=\"normal\"\r\n                        sx={{ borderRadius: 10 }}\r\n                      />\r\n                    </Box>\r\n                    {Object.keys(dynamicFields).length > 1 && index > 0 && (\r\n                      <IconButton onClick={() => removeDynamicField(index)}>\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                    )}\r\n                  </Box>\r\n                ))}\r\n                <Button\r\n                  onClick={addDynamicField}\r\n                  variant=\"outlined\"\r\n                  startIcon={<AddIcon />}\r\n                >\r\n                  Add Educational Background\r\n                </Button>\r\n                <Box mt={2}>\r\n                  <Button variant=\"contained\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            </Scrollbars>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <StudentList />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import {\r\n//   TextField,\r\n//   Button,\r\n//   Typography,\r\n//   Box,\r\n//   Container,\r\n//   Grid,\r\n//   Paper,\r\n// } from \"@mui/material\";\r\n// import StudentList from \"./StudentsList/StudentList.js\";\r\n// import { Scrollbars } from \"react-custom-scrollbars\";\r\n// import schema from \"./Validation/ValidationSchema.js\";\r\n// import { postData } from \"./PostAPI/Api.js\";\r\n\r\n// const Form = ({ setSubmitted, setIsError }) => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm({\r\n//     resolver: yupResolver(schema),\r\n//   });\r\n\r\n//   const [dynamicFields, setDynamicFields] = useState([\r\n//     { institutionName: \"\", passOutYear: \"\", cgpiScore: \"\" },\r\n//   ]);\r\n\r\n//   const addDynamicField = () => {\r\n//     setDynamicFields([\r\n//       ...dynamicFields,\r\n//       { institutionName: \"\", passOutYear: \"\", cgpiScore: \"\" },\r\n//     ]);\r\n//   };\r\n\r\n//   const removeDynamicField = (index) => {\r\n//     const updatedFields = [...dynamicFields];\r\n//     updatedFields.splice(index, 1);\r\n//     setDynamicFields(updatedFields);\r\n//   };\r\n\r\n//   console.log(\"error\", errors);\r\n\r\n//   const onSubmit = (data) => {\r\n//     // Ensure educationalBackground field is initialized as an empty array if not provided\r\n//     const studentData = {\r\n//       ...data,\r\n//       educationalBackground: data.educationalBackground || [],\r\n//     };\r\n\r\n//     setSubmitted(true);\r\n//     postData(studentData)\r\n//       .then((responseData) => {\r\n//         console.log(\"Data posted successfully:\", responseData);\r\n//       })\r\n//       .catch((error) => {\r\n//         setIsError(true);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"md\">\r\n//       <Grid container spacing={3}>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <Typography\r\n//             variant=\"h4\"\r\n//             align=\"center\"\r\n//             gutterBottom\r\n//             style={{ color: \"whitesmoke\" }}\r\n//           >\r\n//             Student Registration Form\r\n//           </Typography>\r\n//           <Paper\r\n//             elevation={0}\r\n//             sx={{\r\n//               p: 2,\r\n//               backgroundColor: \"#FAF9F6\",\r\n//               border: \"1px solid #e0e0e0\",\r\n//             }}\r\n//           >\r\n//             <Scrollbars style={{ height: 450 }}>\r\n//               <form onSubmit={handleSubmit(onSubmit)}>\r\n//                 <Typography\r\n//                   variant=\"h6\"\r\n//                   sx={{ fontFamily: \"Arial, sans-serif\", fontWeight: \"bold\" }}\r\n//                 >\r\n//                   Basic Info\r\n//                 </Typography>\r\n//                 {/* Basic Info Fields */}\r\n//                 <TextField\r\n//                   {...register(\"firstName\")}\r\n//                   label=\"First Name\"\r\n//                   fullWidth\r\n//                   error={!!errors.firstName}\r\n//                   helperText={errors.firstName?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"lastName\")}\r\n//                   label=\"Last Name\"\r\n//                   fullWidth\r\n//                   error={!!errors.lastName}\r\n//                   helperText={errors.lastName?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"email\")}\r\n//                   label=\"Email\"\r\n//                   fullWidth\r\n//                   error={!!errors.email}\r\n//                   helperText={errors.email?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 <TextField\r\n//                   {...register(\"phoneNumber\")}\r\n//                   label=\"Phone Number\"\r\n//                   fullWidth\r\n//                   error={!!errors.phoneNumber}\r\n//                   helperText={errors.phoneNumber?.message}\r\n//                   margin=\"normal\"\r\n//                 />\r\n//                 {dynamicFields.map((field, index) => (\r\n//                   <div key={index}>\r\n//                     <TextField\r\n//                       {...register(\r\n//                         `educationalBackground[${index}].institutionName`\r\n//                       )}\r\n//                       label=\"Institution Name\"\r\n//                       fullWidth\r\n//                       error={\r\n//                         !!errors.educationalBackground?.[index]?.institutionName\r\n//                       }\r\n//                       helperText={\r\n//                         errors.educationalBackground?.[index]?.institutionName\r\n//                           ?.message\r\n//                       }\r\n//                       margin=\"normal\"\r\n//                     />\r\n//                     <TextField\r\n//                       {...register(\r\n//                         `educationalBackground[${index}].passOutYear`\r\n//                       )}\r\n//                       label=\"Pass-out Year\"\r\n//                       fullWidth\r\n//                       type=\"number\"\r\n//                       error={\r\n//                         !!errors.educationalBackground?.[index]?.passOutYear\r\n//                       }\r\n//                       helperText={\r\n//                         errors.educationalBackground?.[index]?.passOutYear\r\n//                           ?.message\r\n//                       }\r\n//                       margin=\"normal\"\r\n//                     />\r\n//                     <TextField\r\n//                       {...register(`educationalBackground[${index}].cgpiScore`)}\r\n//                       label=\"CGPI/Score\"\r\n//                       fullWidth\r\n//                       error={!!errors.educationalBackground?.[index]?.cgpiScore}\r\n//                       helperText={\r\n//                         errors.educationalBackground?.[index]?.cgpiScore\r\n//                           ?.message\r\n//                       }\r\n//                       margin=\"normal\"\r\n//                     />\r\n//                     <Button onClick={() => removeDynamicField(index)}>\r\n//                       Remove\r\n//                     </Button>\r\n//                   </div>\r\n//                 ))}\r\n\r\n//                 <Button onClick={addDynamicField}>Add Field</Button>\r\n//                 <Box mt={2}>\r\n//                   <Button variant=\"contained\" type=\"submit\">\r\n//                     Submit\r\n//                   </Button>\r\n//                 </Box>\r\n//               </form>\r\n//             </Scrollbars>\r\n//           </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={6}>\r\n//           <StudentList />\r\n//         </Grid>\r\n//       </Grid>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}